version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  kubernetes: circleci/kubernetes@0.12.0
  aws-eks: circleci/aws-eks@1.1.0

jobs:
  install_lint:
    docker:
      - image: circleci/python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install required dependencies using requirement.txt
          command: |
            python3 -m venv devops
            source devops/bin/activate
            make install
      - run:
          name: run lint Docker and app
          command: |
            source devops/bin/activate
            make lint
          no_output_timeout: 25m 

          
  configure:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: login build run docker impage
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PWD}
            docker build -t rajpurp/project55:1.0 .
            docker run -d --rm --name myapp -p 8081:8080 rajpurp/project55:1.0
            sleep 10
            docker container ls
            sleep 5
            export URL="http://localhost:8081"
            export output=$(curl -s $URL)
            echo "Output of curl : $output"
            if [[ $output == *"Prakash"* ]]; then
               echo "Success"
              docker stop myapp
            else
              docker stop myapp
              exit 1
            fi
            docker push rajpurp/project55:1.0
      
      
 
  testdeployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Kube cluster
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
            kubectl get pods
 
  createdeployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/prakash-capstone-deployment
 
  testcluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Kube cluster
          command: |
            kubectl get services
 

############
workflows:
    jobs:
#      - install_lint
#      - configure:
#          requires:
#            - install_lint
      - aws-eks/create-cluster:
          cluster-name: prakash-capstone
#         requires:
#           - configure-image
      - testcluster:
          cluster-name: prakash-capstone
          requires:
            - aws-eks/create-cluster
      - createdeployment:
            cluster-name: prakash-capstone
            requires:
              - test-cluster
      - testdeployment:
          cluster-name: prakash-capstone
          requires:
            - create-deployment              
      - aws-eks/update-container-image:
          cluster-name: prakash-capstone
          container-image-updates: 'prakash-capstone-deployment=rajpurp/project55:1.0'
          get-rollout-status: true
          record: true
          requires:
           - test-deployment
          resource-name: deployment/prakash-capstone-deployment        
#     - aws-eks/delete-cluster:
#         cluster-name: prakash-capstone
#         requires:
#          - aws-eks/update-container-image
